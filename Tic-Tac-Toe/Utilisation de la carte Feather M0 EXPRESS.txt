Adafruit Feather M0 express : utilisation de CircuitPython
==========================================================

* MAJ du Firmware CircuitPython (optionnel) :
  --> lien pour MAJ : https://github.com/adafruit/circuitpython/releases
  --> dézipper si nécessaire l'archive pour obtenir le fichier .uf2
  --> Par défaut, lorsque l'on branche la carte Feather au PC, elle présente
      un lecteur 'CIRCUITPY'. Ce lecteur représente sa mémoire Flash de
      stockage et ne permet pas de mettre à jour le firmware
  --> Il faut basculer dans le mode 'Bootloader' pour poivoir effectuer la MAJ.
      Pour cela, il faut appuyer sur le bouton RESET 2 fois très rapprochées.
      Si vous avez réussi, un lecteur 'FEATHERBOOT' a remplacé le précédent.
  --> Copier alors le fichier .uf2 vers ce lecteur. La MAJ s'opère automatiquement
      et instantanément. Une fois terminée, vous retouvez le lecteur de travail
      'CIRCUITPY'

* Ajout de librairies Circuitpython (optionnel) :
  --> Vous devez avoir le lecteur de travail 'CIRCUITPY'
  --> Vous pouvez récupérer le pack 'bundle' fourni par Adafruit à l'adresse
      suivante : https://github.com/adafruit/Adafruit_CircuitPython_Bundle/releases/latest
  --> Dézippez ce pack sur votre PC
  --> Créez un répertoire 'lib' à la racine de 'CIRCUITPY'
  --> Copiez directement toutes les librairies qui vous seront utiles pour votre projet
      (fichiers .mpy)
  --> remarque : dans le dossiers 'drivers' du site Github, vous trouverez chaque librairie
      En cliquant sur l'une d'entre elles, vous basculerez sur la page Github de cette
      librairie où les dossiers 'docs' et 'examples' pourront vous aider.

* Si l'on a perdu le lecteur 'CIRCUITPY' :
  --> Soit parce que vous n'avez pas retirer le lecteur via l'explorer avant de faire un
      reset pour redémarrer votre code, ou soit parce que vous avez débrancher à chaud le
      lecteur du PC
  --> La solution consiste malheureusement à tout formater (votre code sera perdu !!)
  --> Récupérer le fichier .uf2 qui permet d'effacer la mémoire Flash à l'adresse suivante :
      https://cdn-learn.adafruit.com/assets/assets/000/048/746/original/flash_erase_express.ino.feather_m0_express.uf2?1512152098
  --> Placez vous en mode 'Bootloader' pour voir apparaître le lecteur 'FEATHERBOOT' et
      copiez-y le fichier .uf2 que vous venez de télécharger
  --> Attendre environ 15 secondes que la LED Neopixel passe du bleu au clignotement vert
  --> Refaire alors les deux étapes 'MAJ du Firmware CircuitPython' et 'Ajout de librairies'
      CircuitPython (si nécessaire)

* Démarche pour éviter de perdre le lecteur 'CIRCUITPY' :
  --> faire des sauvegardes régulières de son code à un autre emplacement car dans le cas où
      'CIRCUITPY' disparaît, il faut tout reformater
  --> suivre toutes les étapes 'Editer un code CircuitPython' sans jamais effectuer de
      reset sur la carte ou la débrancher de l'USB
      Parfois, la simple sauvegarde d'un programme (lors d'un 'Sauvegarder') peut prendre
      jusqu'à 30 voire 60 secondes suivant l'éditeur. Interrompre cette sauvegarde viendrait 
      corrompre la mémoire Flash et obligerait à son formattage
      C'est encore plus vrai lorsque vous utilisez un éditeur comme Notepad ou Notepad++ (Cf
      'Editer un code CircuitPython')

* Editer un code CircuitPython :
  --> Mettre sous tension la carte Feather en la branchant en USB
  --> Lancer Mu editor
  --> Au lancement, il détecte la carte et propose un mode : choisir Adafruit
  --> Ecrire alors votre code
  --> Cliquer ensuite sur Enregistrer, choisir le nom 'code.py' (le nom est important !!)
      pour qu'il soit mis à la racine 'CIRCUITPY'
  --> Une fois enregistré, celui-ci s'exécute automatiquement
  --> Remarque : pour éditer un code, il suffit de choisir 'Charger' dans Mu Editor 
  --> Remarque : Attention en utilisant Notepad ou Notepad++, la sauvegarde du fichier ne
      suffit pas, il faut systématiquement éjecter le lecteur 'CIRCUITPY' pour forcer Windows
      à terminer la sauvegarde du fichier. Ne débrancher alors pas le câble USB. Comme 
      l'alimentation USB est encore présente, votre code s'exécutera normalement.

* Débugger un code CircuitPython :
  --> Il n'y a pas de réel débuggeur dans Mu Editor, mais une console.
      Pour débugger, il faut donc faire des 'print' dans votre code CircuitPython
  --> Lancer 'Série' dans Mu Editor
  --> Tout les 'print' s'afficheront dans la console'
  --> A chaque nouvelle sauvegarde, des informations sur le reboot de la carte apparaissent avant
      de voir le contenu des 'print' de la nouvelle version de votre code
  --> C'est aussi dans cette console que vous verrez vos erreurs de code
  --> Pour quitter la console, il suffit de cliquer à nouveau sur 'Série' dans Mu Editor
  --> Remarque : lorsque l'on est en mode console, on peut passer en mode REPL, c'est-à-dire récupérer
      le prompt ('>>>') de CircuitPython pour y taper des commandes une par une qui seront évaluées à
      chaque appui sur 'entrée'. Pour passer en mode REPL, faire CTRL+C pendnat l'exécution de votre
      programme puis appuyez sur une touche quelconque. Vous verrez alors '>>>' apparaître.
      Pour quitter REPL, entrer simplement CTRL+D ce qui aura également pour effet de recharger l'exécution
      de votre dernier code

* Tout quitter avant d'éteindre le PC :
  --> Quitter Mu Editor
  --> Ejecter le lecteur 'CIRCUITPY'
  --> Débrancher le câble USB
  --> Eteindre le PC